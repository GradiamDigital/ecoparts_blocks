{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/classnames/index.js","webpack:///./src/index.js","webpack:///external {\"this\":[\"wp\",\"blockEditor\"]}","webpack:///external {\"this\":[\"wp\",\"blocks\"]}","webpack:///external {\"this\":[\"wp\",\"components\"]}","webpack:///external {\"this\":[\"wp\",\"element\"]}","webpack:///external {\"this\":[\"wp\",\"i18n\"]}","webpack:///external {\"this\":\"React\"}"],"names":["registerBlockType","title","__","description","category","icon","supports","html","attributes","blockClass","type","edit","props","className","setAttributes","classnames","save","blockContent","source","selector","blockTitle","buttonText","url","text","siteurl","onChangeBlockContent","value","onChangeBlockTitle","onChangeButtonText","su","window","location","origin","post","innerWidth","onInnerWidthChange","newValue","width","mediaID","mediaURL","attribute","backgroundImage","onSelectImage","media","id","open","quoteText","quoteAuthor","onChangeQuoteText","onChangeQuoteAuthor","blockText","blockHeader","onChangeBlockHeader","onChangeblockText","blockQuote","blockCta","onChangeblockQuote","onChangeblockCta","direction","onChangeBlockText","onDirectionChange","label","date","onDateChange"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nimport { registerBlockType } from '@wordpress/blocks';\nimport {\n\tRichText,\n\tInspectorControls,\n\tURLInputButton,\n\tInnerBlocks,\n\tBlockControls,\n\tBlockVerticalAlignmentToolbar,\n\tMediaUpload,\n\tTextControl,\n\tPlainText\n} from '@wordpress/block-editor';\nimport {\n\tButton,\n\tPanelBody,\n\tSelectControl\n} from '@wordpress/components';\nimport classnames from 'classnames';\nimport React from 'react';\n\n/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\n\nregisterBlockType('ecoparts-blocks/ep-section', {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __('EP Section', 'ecoparts-blocks'),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __(\n\t\t'Custom section block for Ecoparts theme',\n\t\t'ecoparts-blocks'\n\t),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and discover them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: 'ecoparts-blocks',\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPress’ Dashicons, or a custom svg element.\n\t */\n\ticon: 'welcome-add-page',\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n\t\thtml: false,\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n\t *\n\t * @param {Object} [props] Properties passed from the editor.\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\n\tattributes: {\n\t\tblockClass: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\n\n\tedit: (props) => {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockClass },\n\t\t\tsetAttributes,\n\t\t} = props;\n\t\tsetAttributes({ blockClass: 'section' });\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass)}>\n\t\t\t\t<InnerBlocks\n\t\t\t\t\trenderAppender={() => (\n\t\t\t\t\t\t<InnerBlocks.ButtonBlockAppender />\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by the block editor into `post_content`.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\tsave(props) {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockClass },\n\t\t} = props;\n\t\treturn (\n\t\t\t<section className={classnames(className, blockClass)}>\n\t\t\t\t<InnerBlocks.Content />\n\t\t\t</section>\n\t\t);\n\t},\n});\n\nregisterBlockType('ecoparts-blocks/ep-separator', {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __('EP Separator', 'ecoparts-blocks'),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __(\n\t\t'Custom elements separator for Ecoparts theme',\n\t\t'ecoparts-blocks'\n\t),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and discover them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: 'ecoparts-blocks',\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPress’ Dashicons, or a custom svg element.\n\t */\n\ticon: 'minus',\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n\t\thtml: false,\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n\t *\n\t * @param {Object} [props] Properties passed from the editor.\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\n\tattributes: {\n\t\tblockClass: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\n\n\tedit: (props) => {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockClass },\n\t\t\tsetAttributes,\n\t\t} = props;\n\t\tsetAttributes({ blockClass: 'separator' });\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass)} />\n\t\t);\n\t},\n\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by the block editor into `post_content`.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\tsave(props) {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockClass },\n\t\t} = props;\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass)} />\n\t\t);\n\t},\n});\n\nregisterBlockType( 'ecoparts-blocks/ep-teaser-grey', {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __( 'EP Teaser Grey', 'ecoparts-blocks' ),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __(\n\t\t'Light Grey Teaser',\n\t\t'ecoparts-blocks'\n\t),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and discover them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: 'ecoparts-blocks',\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPress’ Dashicons, or a custom svg element.\n\t */\n\ticon: 'format-aside',\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n\t\thtml: false,\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n\t *\n\t * @param {Object} [props] Properties passed from the editor.\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\n\tattributes: {\n\t\tblockContent: {\n\t\t\tsource: 'text',\n\t\t\tselector: '.content',\n\t\t},\n\t\tblockTitle: {\n\t\t\ttitle: 'text',\n\t\t\tselector: '.header',\n\t\t},\n\t\tbuttonText: {\n\t\t\ttitle: 'textText',\n\t\t\tselector: '.link',\n\t\t},\n\t\tblockClass: {\n\t\t\ttype: 'string',\n\t\t},\n\t\turl: {\n\t\t\ttype: 'string',\n\t\t},\n\t\ttext: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\tedit: (props) => {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockContent, blockTitle, buttonText, blockClass, url, text, siteurl },\n\t\t\tsetAttributes,\n\t\t} = props;\n\t\tconst onChangeBlockContent = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tblockContent: value,\n\t\t\t});\n\t\t};\n\t\tconst onChangeBlockTitle = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tblockTitle: value,\n\t\t\t});\n\t\t};\n\t\tconst onChangeButtonText = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tbuttonText: value,\n\t\t\t});\n\t\t};\n\t\tsetAttributes({ blockClass: 'epTeaserGrey' });\n\t\tconst su = window.location.origin + '/wp-content/plugins/ecoparts-blocks/images/silver-button.png';\n\t\tsetAttributes({ siteurl: su });\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className={classnames(blockClass, className)}>\n\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t<PanelBody title={__('Place link')}>\n\t\t\t\t\t\t\t<URLInputButton\n\t\t\t\t\t\t\t\turl={url}\n\t\t\t\t\t\t\t\tonChange={(url, post) => setAttributes({ url, text: (post && post.title) || 'Click here' })}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t<RichText\n\t\t\t\t\t\tclassName=\"header\"\n\t\t\t\t\t\ttagName=\"h3\"\n\t\t\t\t\t\tplaceholder=\"Enter block title here\"\n\t\t\t\t\t\tvalue={blockTitle}\n\t\t\t\t\t\tonChange={onChangeBlockTitle}\n\t\t\t\t\t/>\n\t\t\t\t\t<RichText\n\t\t\t\t\t\tclassName=\"content\"\n\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\tplaceholder=\"Enter block content here\"\n\t\t\t\t\t\tvalue={blockContent}\n\t\t\t\t\t\tonChange={onChangeBlockContent}\n\t\t\t\t\t/>\n\t\t\t\t\t<RichText\n\t\t\t\t\t\tclassName=\"linkText\"\n\t\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\t\tplaceholder=\"Enter text to be displayed on button\"\n\t\t\t\t\t\tvalue={buttonText}\n\t\t\t\t\t\tonChange={onChangeButtonText}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t},\n\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by the block editor into `post_content`.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\tsave(props) {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockContent, blockTitle, buttonText, blockClass, url, text, siteurl },\n\t\t} = props;\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass)}>\n\t\t\t\t<h3 className=\"header\">{blockTitle}</h3>\n\t\t\t\t{/* <RichText.Content\n\t\t\t\t\tclassName=\"header\"\n\t\t\t\t\ttagName=\"h3\"\n\t\t\t\t\tvalue={blockTitle}\n\t\t\t\t/> */}\n\n\t\t\t\t<RichText.Content\n\t\t\t\t\tclassName=\"content\"\n\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\tvalue={blockContent}\n\t\t\t\t/>\n\t\t\t\t{/* <div className=\"content\">\n\t\t\t\t\t{blockContent}\n\t\t\t\t</div> */}\n\t\t\t\t<a className=\"link\" href={url}>\n\t\t\t\t\t<span className=\"linkText\">\n\t\t\t\t\t\t{buttonText}\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t);\n\t},\n} );\n\nregisterBlockType('ecoparts-blocks/ep-container-outer', {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __('EP Container Outer', 'ecoparts-blocks'),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __(\n\t\t'Custom outer container block for Ecoparts theme',\n\t\t'ecoparts-blocks'\n\t),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and discover them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: 'ecoparts-blocks',\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPress’ Dashicons, or a custom svg element.\n\t */\n\ticon: 'welcome-add-page',\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n\t\thtml: false,\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n\t *\n\t * @param {Object} [props] Properties passed from the editor.\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\n\tattributes: {\n\t\tblockClass: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\n\n\tedit: (props) => {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockClass },\n\t\t\tsetAttributes,\n\t\t} = props;\n\t\tsetAttributes({ blockClass: 'containerOuter' });\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass)}>\n\t\t\t\t<InnerBlocks\n\t\t\t\t\trenderAppender={() => (\n\t\t\t\t\t\t<InnerBlocks.ButtonBlockAppender />\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by the block editor into `post_content`.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\tsave(props) {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockClass },\n\t\t} = props;\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass)}>\n\t\t\t\t<InnerBlocks.Content />\n\t\t\t</div>\n\t\t);\n\t},\n});\n\nregisterBlockType('ecoparts-blocks/ep-container-inner', {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __('EP Container Inner', 'ecoparts-blocks'),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __(\n\t\t'Custom inner container block for Ecoparts theme',\n\t\t'ecoparts-blocks'\n\t),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and discover them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: 'ecoparts-blocks',\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPress’ Dashicons, or a custom svg element.\n\t */\n\ticon: 'welcome-add-page',\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n\t\thtml: false,\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n\t *\n\t * @param {Object} [props] Properties passed from the editor.\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\n\tattributes: {\n\t\tblockClass: {\n\t\t\ttype: 'string',\n\t\t},\n\t\tinnerWidth: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\n\n\tedit: (props) => {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockClass, innerWidth },\n\t\t\tsetAttributes,\n\t\t} = props;\n\t\tconst onInnerWidthChange = (newValue) => {\n\t\t\tprops.setAttributes({\n\t\t\t\tinnerWidth: newValue,\n\t\t\t});\n\t\t};\n\t\tsetAttributes({ blockClass: 'containerInner' });\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass)}>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title={__('Inner width in % of parent width')}>\n\t\t\t\t\t\t<PlainText\n\t\t\t\t\t\t\tclassName='ec-attr-edit-textarea'\n\t\t\t\t\t\t\tvalue={innerWidth}\n\t\t\t\t\t\t\tonChange={onInnerWidthChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t\t<InnerBlocks\n\t\t\t\t\trenderAppender={() => (\n\t\t\t\t\t\t<InnerBlocks.ButtonBlockAppender />\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by the block editor into `post_content`.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\tsave(props) {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockClass, innerWidth },\n\t\t} = props;\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass)} style={{ width: innerWidth}}>\n\t\t\t\t<InnerBlocks.Content />\n\t\t\t</div>\n\t\t);\n\t},\n});\n\nregisterBlockType('ecoparts-blocks/ep-parallax', {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __('Ep Parallax container', 'ecoparts-blocks'),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __(\n\t\t'Parallax container for theme',\n\t\t'ecoparts-blocks'\n\t),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and discover them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: 'ecoparts-blocks',\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPress’ Dashicons, or a custom svg element.\n\t */\n\ticon: 'format-image',\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n\t\thtml: false,\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n\t *\n\t * @param {Object} [props] Properties passed from the editor.\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\n\tattributes: {\n\t\tmediaID: {\n\t\t\ttype: 'number',\n\t\t},\n\t\tmediaURL: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'attribute',\n\t\t\tattribute: 'src',\n\t\t\tselector: '.bcgImage',\n\t\t},\n\t\tblockClass: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\n\tedit: (props) => {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tbackgroundImage,\n\t\t\tattributes: { mediaID, mediaURL, blockClass },\n\t\t\tsetAttributes,\n\t\t} = props;\n\t\tconst onSelectImage = (media) => {\n\t\t\tsetAttributes({\n\t\t\t\tmediaURL: media.url,\n\t\t\t\tmediaID: media.id,\n\t\t\t});\n\t\t};\n\t\tsetAttributes({ blockClass: 'epParallax' });\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass)} >\n\t\t\t\t<MediaUpload\n\t\t\t\t\tonSelect={onSelectImage}\n\t\t\t\t\tallowedTypes=\"image\"\n\t\t\t\t\tvalue={mediaID}\n\t\t\t\t\trender={({ open }) => (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\tmediaID\n\t\t\t\t\t\t\t\t\t? 'image-button'\n\t\t\t\t\t\t\t\t\t: 'button button-large'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={open}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{!mediaID ? (\n\t\t\t\t\t\t\t\t__('Upload Image', 'ecoparts-blocks')\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tsrc={mediaURL}\n\t\t\t\t\t\t\t\t\t\tclassName=\"bcgImage\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t\t<InnerBlocks\n\t\t\t\t\trenderAppender={() => (\n\t\t\t\t\t\t<InnerBlocks.ButtonBlockAppender />\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by the block editor into `post_content`.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\tsave(props) {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { mediaID, mediaURL, blockClass },\n\t\t} = props;\n\t\treturn (\n\t\t\t<div className={classnames(blockClass)}>\n\t\t\t\t<img src={mediaURL} class=\"bcgImage\" />\n\t\t\t\t<InnerBlocks.Content />\n\t\t\t</div>\n\n\t\t);\n\t},\n});\n\nregisterBlockType('ecoparts-blocks/ep-quote', {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __('EP Quote', 'ecoparts-blocks'),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __(\n\t\t'Quote',\n\t\t'ecoparts-blocks'\n\t),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and discover them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: 'ecoparts-blocks',\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPress’ Dashicons, or a custom svg element.\n\t */\n\ticon: 'format-quote',\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n\t\thtml: false,\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n\t *\n\t * @param {Object} [props] Properties passed from the editor.\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\n\tattributes: {\n\t\tquoteText: {\n\t\t\tsource: 'text',\n\t\t\tselector: '.quote',\n\t\t},\n\t\tquoteAuthor: {\n\t\t\ttitle: 'text',\n\t\t\tselector: '.author',\n\t\t},\n\t\tblockClass: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\tedit: (props) => {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { quoteText, quoteAuthor, blockClass },\n\t\t\tsetAttributes,\n\t\t} = props;\n\t\tconst onChangeQuoteText = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tquoteText: value,\n\t\t\t});\n\t\t};\n\t\tconst onChangeQuoteAuthor = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tquoteAuthor: value,\n\t\t\t});\n\t\t};\n\t\tsetAttributes({ blockClass: 'epQuote' });\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass)}>\n\t\t\t\t<RichText\n\t\t\t\t\tclassName=\"quote\"\n\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\tplaceholder=\"Enter quote here\"\n\t\t\t\t\tvalue={quoteText}\n\t\t\t\t\tonChange={onChangeQuoteText}\n\t\t\t\t/>\n\t\t\t\t<RichText\n\t\t\t\t\tclassName=\"author\"\n\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\tplaceholder=\"Enter quote author here\"\n\t\t\t\t\tvalue={quoteAuthor}\n\t\t\t\t\tonChange={onChangeQuoteAuthor}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by the block editor into `post_content`.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\tsave(props) {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { quoteText, quoteAuthor, blockClass },\n\t\t} = props;\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass)}>\n\t\t\t\t<RichText.Content\n\t\t\t\t\tclassName=\"quote\"\n\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\tvalue={quoteText}\n\t\t\t\t/>\n\t\t\t\t<RichText.Content\n\t\t\t\t\tclassName=\"author\"\n\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\tvalue={quoteAuthor}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n});\n\nregisterBlockType('ecoparts-blocks/ep-innermenu', {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __('EP Inner Menu', 'ecoparts-blocks'),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __(\n\t\t'Inner Menu',\n\t\t'ecoparts-blocks'\n\t),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and discover them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: 'ecoparts-blocks',\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPress’ Dashicons, or a custom svg element.\n\t */\n\ticon: 'media-text',\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n\t\thtml: false,\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n\t *\n\t * @param {Object} [props] Properties passed from the editor.\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\n\tattributes: {\n\t\tblockText: {\n\t\t\ttitle: 'html',\n\t\t\tselector: '.text',\n\t\t},\n\t\tblockClass: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\tedit: (props) => {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockHeader, blockText, blockClass },\n\t\t\tsetAttributes,\n\t\t} = props;\n\t\tconst onChangeBlockHeader = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tblockHeader: value,\n\t\t\t});\n\t\t};\n\t\tconst onChangeblockText = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tblockText: value,\n\t\t\t});\n\t\t};\n\t\tsetAttributes({ blockClass: 'epInnerMenu' });\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass)}>\n\t\t\t\t<RichText\n\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\tplaceholder=\"Enter text here\"\n\t\t\t\t\tmultiline=\"p\"\n\t\t\t\t\tvalue={blockText}\n\t\t\t\t\tonChange={onChangeblockText}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by the block editor into `post_content`.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\tsave(props) {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockHeader, blockText, blockClass },\n\t\t} = props;\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass)}>\n\t\t\t\t<RichText.Content\n\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\tvalue={blockText}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n});\nregisterBlockType('ecoparts-blocks/ep-textblock', {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __('EP Text Block', 'ecoparts-blocks'),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __(\n\t\t'Text Block',\n\t\t'ecoparts-blocks'\n\t),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and discover them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: 'ecoparts-blocks',\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPress’ Dashicons, or a custom svg element.\n\t */\n\ticon: 'media-text',\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n\t\thtml: false,\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n\t *\n\t * @param {Object} [props] Properties passed from the editor.\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\n\tattributes: {\n\t\tblockHeader: {\n\t\t\tsource: 'text',\n\t\t\tselector: '.header',\n\t\t},\n\t\tblockText: {\n\t\t\ttitle: 'html',\n\t\t\tselector: '.text',\n\t\t},\n\t\tblockClass: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\tedit: (props) => {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockHeader, blockText, blockClass },\n\t\t\tsetAttributes,\n\t\t} = props;\n\t\tconst onChangeBlockHeader = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tblockHeader: value,\n\t\t\t});\n\t\t};\n\t\tconst onChangeblockText = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tblockText: value,\n\t\t\t});\n\t\t};\n\t\tsetAttributes({ blockClass: 'epTextBlock' });\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass)}>\n\t\t\t\t<RichText\n\t\t\t\t\tclassName=\"header\"\n\t\t\t\t\ttagName=\"h3\"\n\t\t\t\t\tplaceholder=\"Enter header here\"\n\t\t\t\t\tvalue={blockHeader}\n\t\t\t\t\tonChange={onChangeBlockHeader}\n\t\t\t\t/>\n\t\t\t\t<RichText\n\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\tplaceholder=\"Enter text here\"\n\t\t\t\t\tmultiline=\"p\"\n\t\t\t\t\tvalue={blockText}\n\t\t\t\t\tonChange={onChangeblockText}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by the block editor into `post_content`.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\tsave(props) {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockHeader, blockText, blockClass },\n\t\t} = props;\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass)}>\n\t\t\t\t<RichText.Content\n\t\t\t\t\tclassName=\"header\"\n\t\t\t\t\ttagName=\"h3\"\n\t\t\t\t\tvalue={blockHeader}\n\t\t\t\t/>\n\t\t\t\t<RichText.Content\n\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\tvalue={blockText}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n});\n\nregisterBlockType('ecoparts-blocks/ep-vorurteil-block', {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __('EP Vorurteil Block', 'ecoparts-blocks'),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __(\n\t\t'Vorurteil Block',\n\t\t'ecoparts-blocks'\n\t),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and discover them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: 'ecoparts-blocks',\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPress’ Dashicons, or a custom svg element.\n\t */\n\ticon: 'media-text',\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n\t\thtml: false,\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n\t *\n\t * @param {Object} [props] Properties passed from the editor.\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\n\tattributes: {\n\t\tblockHeader: {\n\t\t\tsource: 'text',\n\t\t\tselector: '.header',\n\t\t},\n\t\tblockText: {\n\t\t\ttitle: 'html',\n\t\t\tselector: '.text',\n\t\t},\n\t\tblockQuote: {\n\t\t\ttitle: 'html',\n\t\t\tselector: '.quote',\n\t\t},\n\t\tblockCta: {\n\t\t\ttitle: 'text',\n\t\t\tselector: '.cta',\n\t\t},\n\t\tblockClass: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\tedit: (props) => {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockHeader, blockText, blockQuote, blockCta, blockClass },\n\t\t\tsetAttributes,\n\t\t} = props;\n\t\tconst onChangeBlockHeader = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tblockHeader: value,\n\t\t\t});\n\t\t};\n\t\tconst onChangeblockText = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tblockText: value,\n\t\t\t});\n\t\t};\n\t\tconst onChangeblockQuote = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tblockQuote: value,\n\t\t\t});\n\t\t};\n\t\tconst onChangeblockCta = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tblockCta: value,\n\t\t\t});\n\t\t};\n\t\tsetAttributes({ blockClass: 'epVorurteilBlock' });\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass)}>\n\t\t\t\t<div>\n\t\t\t\t\t<RichText\n\t\t\t\t\t\tclassName=\"header\"\n\t\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\t\tplaceholder=\"Enter header here\"\n\t\t\t\t\t\tvalue={blockHeader}\n\t\t\t\t\t\tonChange={onChangeBlockHeader}\n\t\t\t\t\t/>\n\t\t\t\t\t<RichText\n\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\tplaceholder=\"Enter text here\"\n\t\t\t\t\t\tmultiline=\"p\"\n\t\t\t\t\t\tvalue={blockText}\n\t\t\t\t\t\tonChange={onChangeblockText}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<RichText\n\t\t\t\t\t\tclassName=\"quote\"\n\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\tplaceholder=\"Enter quote here\"\n\t\t\t\t\t\tmultiline=\"p\"\n\t\t\t\t\t\tvalue={blockQuote}\n\t\t\t\t\t\tonChange={onChangeblockQuote}\n\t\t\t\t\t/>\n\t\t\t\t\t<RichText\n\t\t\t\t\t\tclassName=\"cta\"\n\t\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\t\tplaceholder=\"Enter cta here\"\n\t\t\t\t\t\tvalue={blockCta}\n\t\t\t\t\t\tonChange={onChangeblockCta}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t},\n\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by the block editor into `post_content`.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\tsave(props) {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockHeader, blockText, blockQuote, blockCta, blockClass },\n\t\t} = props;\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass)}>\n\t\t\t\t<div>\n\t\t\t\t\t<RichText.Content\n\t\t\t\t\t\tclassName=\"header\"\n\t\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\t\tvalue={blockHeader}\n\t\t\t\t\t/>\n\t\t\t\t\t<RichText.Content\n\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\tvalue={blockText}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<RichText.Content\n\t\t\t\t\t\tclassName=\"quote\"\n\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\tvalue={blockQuote}\n\t\t\t\t\t/>\n\t\t\t\t\t<RichText.Content\n\t\t\t\t\t\tclassName=\"cta\"\n\t\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\t\tvalue={blockCta}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t},\n});\n\nregisterBlockType('ecoparts-blocks/ep-teaser-horizontal', {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __('EP Teaser Horizontal', 'ecoparts-blocks'),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __(\n\t\t'Teaser Horizontal',\n\t\t'ecoparts-blocks'\n\t),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and discover them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: 'ecoparts-blocks',\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPress’ Dashicons, or a custom svg element.\n\t */\n\ticon: 'id',\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n\t\thtml: false,\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n\t *\n\t * @param {Object} [props] Properties passed from the editor.\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\n\tattributes: {\n\t\tblockHeader: {\n\t\t\tsource: 'text',\n\t\t\tselector: '.header',\n\t\t},\n\t\tblockText: {\n\t\t\tsource: 'html',\n\t\t\tselector: '.text',\n\t\t},\n\t\tbuttonText: {\n\t\t\tsource: 'text',\n\t\t\tselector: '.buttonText',\n\t\t},\n\t\tmediaID: {\n\t\t\ttype: 'number',\n\t\t},\n\t\tmediaURL: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'attribute',\n\t\t\tselector: '.image',\n\t\t\tattribute: 'src',\n\t\t},\n\t\turl: {\n\t\t\ttype: 'string',\n\t\t},\n\t\tdirection: {\n\t\t\ttype: 'string',\n\t\t},\n\t\tblockClass: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\tedit: (props) => {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockHeader, blockText, mediaID, mediaURL, buttonText, url, direction, blockClass },\n\t\t\tsetAttributes,\n\t\t} = props;\n\t\tconst onChangeBlockHeader = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tblockHeader: value,\n\t\t\t});\n\t\t};\n\t\tconst onChangeBlockText = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tblockText: value,\n\t\t\t});\n\t\t};\n\t\tconst onChangeButtonText = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tbuttonText: value,\n\t\t\t});\n\t\t};\n\t\tconst onSelectImage = (media) => {\n\t\t\tsetAttributes({\n\t\t\t\tmediaURL: media.url,\n\t\t\t\tmediaID: media.id,\n\t\t\t});\n\t\t};\n\t\tconst onDirectionChange = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tdirection: value,\n\t\t\t});\n\t\t};\n\t\tif (!direction) {\n\t\t\tsetAttributes({ direction: 'ltr' });\n\t\t};\n\t\tsetAttributes({ blockClass: 'epTeaserH' });\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className={classnames(className, blockClass, direction)}>\n\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t<PanelBody title={__('Content direction')}>\n\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\tlabel={__('Set content direction', 'ecoparts-blocks')}\n\t\t\t\t\t\t\t\tvalue={direction}\n\t\t\t\t\t\t\t\toptions={\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t{ label: 'text left, image right', value: 'ltr' },\n\t\t\t\t\t\t\t\t\t\t{ label: 'text right, image left', value: 'rtl' },\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonChange={onDirectionChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<URLInputButton\n\t\t\t\t\t\t\t\turl={url}\n\t\t\t\t\t\t\t\tonChange={(url, post) => setAttributes({ url, text: (post && post.title) || '' })}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\tclassName=\"header\"\n\t\t\t\t\t\t\ttagName=\"h3\"\n\t\t\t\t\t\t\tplaceholder=\"Enter header here\"\n\t\t\t\t\t\t\tvalue={blockHeader}\n\t\t\t\t\t\t\tonChange={onChangeBlockHeader}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\t\tplaceholder=\"Enter text here\"\n\t\t\t\t\t\t\tmultiline=\"p\"\n\t\t\t\t\t\t\tvalue={blockText}\n\t\t\t\t\t\t\tonChange={onChangeBlockText}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\tclassName=\"buttonText\"\n\t\t\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\t\t\tplaceholder=\"Enter button text here\"\n\t\t\t\t\t\t\tvalue={buttonText}\n\t\t\t\t\t\t\tonChange={onChangeButtonText}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\t\tonSelect={onSelectImage}\n\t\t\t\t\t\t\tallowedTypes=\"image\"\n\t\t\t\t\t\t\tvalue={mediaID}\n\t\t\t\t\t\t\trender={({ open }) => (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\tmediaID\n\t\t\t\t\t\t\t\t\t\t\t? 'image-button'\n\t\t\t\t\t\t\t\t\t\t\t: 'button button-small'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClick={open}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{!mediaID ? (\n\t\t\t\t\t\t\t\t\t\t__('Upload Image', 'ecoparts-blocks')\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={mediaURL}\n\t\t\t\t\t\t\t\t\t\t\t\talt={blockHeader}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"image\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t},\n\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by the block editor into `post_content`.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\tsave(props) {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockHeader, blockText, mediaID, mediaURL, url, buttonText, direction, blockClass },\n\t\t} = props;\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass, direction)}>\n\t\t\t\t<div className=\"textContainer\">\n\t\t\t\t\t<RichText.Content\n\t\t\t\t\t\tclassName=\"header\"\n\t\t\t\t\t\ttagName=\"h3\"\n\t\t\t\t\t\tvalue={blockHeader}\n\t\t\t\t\t/>\n\t\t\t\t\t<RichText.Content\n\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\tvalue={blockText}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"imageContainerOuter\">\n\t\t\t\t\t<div class=\"imageContainerInner\">\n\t\t\t\t\t\t<img className=\"image\" src={mediaURL} alt={blockHeader} />\n\t\t\t\t\t\t<a href={url} className=\"blockLink\">\n\t\t\t\t\t\t\t<span class=\"buttonText\">{buttonText}</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t},\n});\n\nregisterBlockType('ecoparts-blocks/ep-teaser-vertical', {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __('EP Teaser Vertical', 'ecoparts-blocks'),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __(\n\t\t'Teaser Vertical',\n\t\t'ecoparts-blocks'\n\t),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and discover them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: 'ecoparts-blocks',\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPress’ Dashicons, or a custom svg element.\n\t */\n\ticon: 'id',\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n\t\thtml: false,\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n\t *\n\t * @param {Object} [props] Properties passed from the editor.\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\n\tattributes: {\n\t\tblockHeader: {\n\t\t\tsource: 'text',\n\t\t\tselector: '.header',\n\t\t},\n\t\tblockText: {\n\t\t\tsource: 'html',\n\t\t\tselector: '.text',\n\t\t},\n\t\tbuttonText: {\n\t\t\tsource: 'text',\n\t\t\tselector: '.buttonText',\n\t\t},\n\t\tmediaID: {\n\t\t\ttype: 'number',\n\t\t},\n\t\tmediaURL: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'attribute',\n\t\t\tselector: '.image',\n\t\t\tattribute: 'src',\n\t\t},\n\t\turl: {\n\t\t\ttype: 'string',\n\t\t},\n\t\tdate: {\n\t\t\ttype: 'string',\n\t\t},\n\t\tblockClass: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\tedit: (props) => {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockHeader, blockText, mediaID, mediaURL, buttonText, url, date, blockClass },\n\t\t\tsetAttributes,\n\t\t} = props;\n\t\tconst onChangeBlockHeader = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tblockHeader: value,\n\t\t\t});\n\t\t};\n\t\tconst onChangeBlockText = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tblockText: value,\n\t\t\t});\n\t\t};\n\t\tconst onChangeButtonText = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tbuttonText: value,\n\t\t\t});\n\t\t};\n\t\tconst onSelectImage = (media) => {\n\t\t\tsetAttributes({\n\t\t\t\tmediaURL: media.url,\n\t\t\t\tmediaID: media.id,\n\t\t\t});\n\t\t};\n\t\tconst onDateChange = (value) => {\n\t\t\tsetAttributes({\n\t\t\t\tdate: value,\n\t\t\t});\n\t\t};\n\t\tsetAttributes({ blockClass: 'epTeaserV' });\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className={classnames(className, blockClass)}>\n\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t<PanelBody title={__('Content url')}>\n\t\t\t\t\t\t\t<URLInputButton\n\t\t\t\t\t\t\t\turl={url}\n\t\t\t\t\t\t\t\tonChange={(url, post) => setAttributes({ url, text: (post && post.title) || '' })}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\t\tonSelect={onSelectImage}\n\t\t\t\t\t\t\tallowedTypes=\"image\"\n\t\t\t\t\t\t\tvalue={mediaID}\n\t\t\t\t\t\t\trender={({ open }) => (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\tmediaID\n\t\t\t\t\t\t\t\t\t\t\t? 'image-button'\n\t\t\t\t\t\t\t\t\t\t\t: 'button button-small'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClick={open}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{!mediaID ? (\n\t\t\t\t\t\t\t\t\t\t__('Upload Image', 'ecoparts-blocks')\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={mediaURL}\n\t\t\t\t\t\t\t\t\t\t\t\talt={blockHeader}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"image\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<PlainText\n\t\t\t\t\t\t\tclassName=\"date\"\n\t\t\t\t\t\t\tplaceholder=\"Enter date here\"\n\t\t\t\t\t\t\tvalue={date}\n\t\t\t\t\t\t\tonChange={onDateChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\tclassName=\"header\"\n\t\t\t\t\t\t\ttagName=\"h3\"\n\t\t\t\t\t\t\tplaceholder=\"Enter header here\"\n\t\t\t\t\t\t\tvalue={blockHeader}\n\t\t\t\t\t\t\tonChange={onChangeBlockHeader}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\t\tplaceholder=\"Enter text here\"\n\t\t\t\t\t\t\tmultiline=\"p\"\n\t\t\t\t\t\t\tvalue={blockText}\n\t\t\t\t\t\t\tonChange={onChangeBlockText}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\tclassName=\"buttonText\"\n\t\t\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\t\t\tplaceholder=\"Enter button text here\"\n\t\t\t\t\t\t\tvalue={buttonText}\n\t\t\t\t\t\t\tonChange={onChangeButtonText}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t},\n\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by the block editor into `post_content`.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\tsave(props) {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes: { blockHeader, blockText, mediaID, mediaURL, url, buttonText, date, blockClass },\n\t\t} = props;\n\t\treturn (\n\t\t\t<div className={classnames(className, blockClass)}>\n\t\t\t\t<div className=\"imageContainerOuter\">\n\t\t\t\t\t<div class=\"imageContainerInner\">\n\t\t\t\t\t\t<img className=\"image\" src={mediaURL} alt={blockHeader} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"textContainer\">\n\t\t\t\t\t<p class=\"date\">{date}</p>\n\t\t\t\t\t<RichText.Content\n\t\t\t\t\t\tclassName=\"header\"\n\t\t\t\t\t\ttagName=\"h3\"\n\t\t\t\t\t\tvalue={blockHeader}\n\t\t\t\t\t/>\n\t\t\t\t\t<RichText.Content\n\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\tvalue={blockText}\n\t\t\t\t\t/>\n\t\t\t\t\t<a href={url} className=\"blockLink\">\n\t\t\t\t\t\t<span class=\"buttonText\">{buttonText}</span>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t},\n});\n","(function() { module.exports = this[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = this[\"wp\"][\"blocks\"]; }());","(function() { module.exports = this[\"wp\"][\"components\"]; }());","(function() { module.exports = this[\"wp\"][\"element\"]; }());","(function() { module.exports = this[\"wp\"][\"i18n\"]; }());","(function() { module.exports = this[\"React\"]; }());"],"sourceRoot":""}